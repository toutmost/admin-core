syntax = "proto3";

// API message

message ApiInfo {
  optional uint64 id = 1;
  optional int64 created_at = 2;
  optional int64 updated_at = 3;
  optional string path = 4;
  optional string description = 5;
  optional string api_group = 6;
  optional string method = 7;
  optional bool is_required = 8;
  optional string service_name = 9;
}

message ApiListResp {
  uint64 total = 1;
  repeated ApiInfo data = 2;
}

message ApiListReq {
  uint64 page = 1;
  uint64 page_size = 2;
  optional string path = 3;
  optional string description = 4;
  optional string api_group = 5;
  optional string method = 6;
  optional string is_default = 7;
  optional string service_name = 8;
}


service Core {

  // API management
  // group: api
  rpc createApi (ApiInfo) returns (BaseIDResp);
  // group: api
  rpc updateApi (ApiInfo) returns (BaseResp);
  // group: api
  rpc getApiList (ApiListReq) returns (ApiListResp);
  // group: api
  rpc getApiById (IDReq) returns (ApiInfo);
  // group: api
  rpc deleteApi (IDsReq) returns (BaseResp);


}